[pytest]
markers =
    unit: mark test as unit test
    integration: mark test as integration test
    e2e: mark test as end-to-end test
    slow: mark test as slow running test
    db: mark test as requiring database access
    skip: mark test to be skipped
    xfail: mark test as expected to fail

python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Configuration for test output
testpaths = backend/tests
addopts = -v --tb=short -r a --cov=app --cov-report=term-missing --cov-report=html

# Ignore specific warnings
filterwarnings =
    ignore:.*U.*mode is deprecated:DeprecationWarning
    ignore:.*is deprecated:DeprecationWarning
    ignore:.*is deprecated and will be removed in a future version:DeprecationWarning
    ignore:.*is deprecated and will be removed in a future version.*:DeprecationWarning
    ignore:.*pkg_resources is deprecated.*:DeprecationWarning
    ignore:.*distutils Version classes are deprecated.*:DeprecationWarning
    ignore:.*The loop argument is deprecated.*:DeprecationWarning
