mypy.ini: While reading from 'mypy.ini' [line 56]: section '[tool.mypy.overrides]' already exists
pyproject.toml: [module = "sqlalchemy.*"]: Per-module sections should only specify per-module flags (warn_redundant_casts)
pyproject.toml: [module = "alembic.*"]: Per-module sections should only specify per-module flags (warn_redundant_casts)
pyproject.toml: [module = "pydantic.*"]: Per-module sections should only specify per-module flags (warn_redundant_casts)
app/core/optimizer/mode_effects.py:162: error: Returning Any from function declared to return "float"  [no-any-return]
app/core/hashing.py:111: error: Statement is unreachable  [unreachable]
app/schemas/webhook.py:7: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
app/schemas/webhook.py:7: note: Possible overload variants:
app/schemas/webhook.py:7: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/webhook.py:7: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/webhook.py:7: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/webhook.py:7: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/webhook.py:9: error: No overload variant of "Field" matches argument types "EllipsisType", "int", "AliasChoices", "list[str]"  [call-overload]
app/schemas/webhook.py:9: note: Possible overload variants:
app/schemas/webhook.py:9: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/webhook.py:9: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/webhook.py:9: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/webhook.py:9: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/tag.py:29: error: Incompatible types in assignment (expression has type "str | None", base class "TagBase" defined the type as "str")  [assignment]
app/schemas/profession.py:262: error: Incompatible types in assignment (expression has type "list[EliteSpecialization]", base class "ProfessionInDBBase" defined the type as "list[EliteSpecializationInDB]")  [assignment]
app/schemas/permission.py:35: error: Incompatible types in assignment (expression has type "str | None", base class "PermissionBase" defined the type as "str")  [assignment]
app/schemas/permission.py:38: error: Incompatible types in assignment (expression has type "str | None", base class "PermissionBase" defined the type as "str")  [assignment]
app/schemas/permission.py:41: error: Incompatible types in assignment (expression has type "bool | None", base class "PermissionBase" defined the type as "bool")  [assignment]
app/schemas/elite_specialization.py:100: error: No overload variant of "Field" matches argument types "EllipsisType", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:100: note: Possible overload variants:
app/schemas/elite_specialization.py:100: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:100: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:100: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:100: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:106: error: No overload variant of "Field" matches argument types "EllipsisType", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:106: note: Possible overload variants:
app/schemas/elite_specialization.py:106: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:106: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:106: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:106: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:112: error: No overload variant of "Field" matches argument types "None", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:112: note: Possible overload variants:
app/schemas/elite_specialization.py:112: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:112: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:112: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:112: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:118: error: No overload variant of "Field" matches argument types "None", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:118: note: Possible overload variants:
app/schemas/elite_specialization.py:118: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:118: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:118: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:118: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:124: error: No overload variant of "Field" matches argument types "EllipsisType", "str", "int"  [call-overload]
app/schemas/elite_specialization.py:124: note: Possible overload variants:
app/schemas/elite_specialization.py:124: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:124: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:124: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:124: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:133: error: No overload variant of "Field" matches argument types "type[list[_T]]", "str", "list[str]"  [call-overload]
app/schemas/elite_specialization.py:133: note: Possible overload variants:
app/schemas/elite_specialization.py:133: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:133: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:133: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:133: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:271: error: No overload variant of "Field" matches argument types "None", "int", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:271: note: Possible overload variants:
app/schemas/elite_specialization.py:271: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:271: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:271: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:271: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:278: error: No overload variant of "Field" matches argument types "None", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:278: note: Possible overload variants:
app/schemas/elite_specialization.py:278: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:278: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:278: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:278: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:284: error: No overload variant of "Field" matches argument types "None", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:284: note: Possible overload variants:
app/schemas/elite_specialization.py:284: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:284: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:284: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:284: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:290: error: No overload variant of "Field" matches argument types "None", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:290: note: Possible overload variants:
app/schemas/elite_specialization.py:290: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:290: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:290: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:290: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:296: error: No overload variant of "Field" matches argument types "None", "int", "str", "str"  [call-overload]
app/schemas/elite_specialization.py:296: note: Possible overload variants:
app/schemas/elite_specialization.py:296: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:296: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:296: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:296: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:302: error: No overload variant of "Field" matches argument types "None", "str", "int"  [call-overload]
app/schemas/elite_specialization.py:302: note: Possible overload variants:
app/schemas/elite_specialization.py:302: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:302: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:302: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:302: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:310: error: No overload variant of "Field" matches argument types "None", "str", "list[str]"  [call-overload]
app/schemas/elite_specialization.py:310: note: Possible overload variants:
app/schemas/elite_specialization.py:310: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/elite_specialization.py:310: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:310: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/schemas/elite_specialization.py:310: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/schemas/composition.py:142: error: Value of type "JsonDict | Callable[[JsonDict], None] | Callable[[JsonDict, type[Any]], None] | None" is not indexable  [index]
app/schemas/composition.py:142: error: Value of type "int | float | str | list[JsonValue] | JsonDict | Any | None" is not indexable  [index]
app/schemas/composition.py:142: error: Unpacked dict entry 0 has incompatible type "Any | str | int | float | list[JsonValue] | JsonDict | None"; expected "SupportsKeysAndGetItem[str, int | float | str | list[JsonValue] | JsonDict | None]"  [dict-item]
app/schemas/composition.py:142: error: Invalid index type "int" for "dict[str, JsonValue]"; expected type "str"  [index]
app/schemas/composition.py:209: error: Value of type "JsonDict | Callable[[JsonDict], None] | Callable[[JsonDict, type[Any]], None] | None" is not indexable  [index]
app/schemas/composition.py:209: error: Value of type "int | float | str | list[JsonValue] | JsonDict | Any | None" is not indexable  [index]
app/schemas/composition.py:209: error: Unpacked dict entry 4 has incompatible type "Any | str | int | float | list[JsonValue] | JsonDict | None"; expected "SupportsKeysAndGetItem[str, int | float | str | list[JsonValue] | JsonDict | None]"  [dict-item]
app/schemas/composition.py:209: error: Invalid index type "int" for "dict[str, JsonValue]"; expected type "str"  [index]
app/schemas/composition.py:220: error: Incompatible types in assignment (expression has type "list[dict[str, Any]]", base class "CompositionBase" defined the type as "list[str] | None")  [assignment]
app/schemas/composition.py:227: error: Value of type "JsonDict | Callable[[JsonDict], None] | Callable[[JsonDict, type[Any]], None] | None" is not indexable  [index]
app/schemas/composition.py:227: error: Value of type "int | float | str | list[JsonValue] | JsonDict | Any | None" is not indexable  [index]
app/schemas/composition.py:227: error: Unpacked dict entry 0 has incompatible type "Any | str | int | float | list[JsonValue] | JsonDict | None"; expected "SupportsKeysAndGetItem[str, int | float | str | list[JsonValue] | JsonDict | None]"  [dict-item]
app/schemas/composition.py:228: error: Invalid index type "int" for "dict[str, JsonValue]"; expected type "str"  [index]
app/schemas/composition.py:528: error: Value of type "JsonDict | Callable[[JsonDict], None] | Callable[[JsonDict, type[Any]], None] | None" is not indexable  [index]
app/schemas/composition.py:528: error: Value of type "int | float | str | list[JsonValue] | JsonDict | Any | None" is not indexable  [index]
app/schemas/composition.py:530: error: Invalid index type "int" for "dict[str, JsonValue]"; expected type "str"  [index]
app/models/base_model.py:50: error: Name "uuid" is not defined  [name-defined]
app/models/base_model.py:69: error: Incompatible types in assignment (expression has type "None", base class "Base" defined the type as "int")  [assignment]
app/models/base_model.py:71: error: Name "uuid" is not defined  [name-defined]
app/models/base_model.py:103: error: Function is missing a type annotation  [no-untyped-def]
app/models/base_model.py:112: error: Function is missing a type annotation  [no-untyped-def]
app/crud/base_async.py:27: error: "type[ModelType]" has no attribute "id"  [attr-defined]
app/crud/base.py:37: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/crud/base.py:48: error: "type[ModelType]" has no attribute "id"  [attr-defined]
app/crud/base.py:53: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/crud/base.py:151: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/crud/base.py:164: error: "type[ModelType]" has no attribute "id"  [attr-defined]
app/crud/base.py:170: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/models/token_models.py:34: error: Name "User" is not defined  [name-defined]
app/models/token_models.py:36: error: Function is missing a type annotation  [no-untyped-def]
app/models/token_models.py:63: error: Function is missing a type annotation  [no-untyped-def]
app/models/base.py:38: error: Name "BaseUUIDModel" already defined (possibly by an import)  [no-redef]
app/models/base.py:43: error: Incompatible types in assignment (expression has type "None", base class "Base" defined the type as "int")  [assignment]
app/models/base.py:52: error: Name "BaseTimeStampedModel" already defined (possibly by an import)  [no-redef]
app/models/base.py:65: error: Name "BaseUUIDTimeStampedModel" already defined (possibly by an import)  [no-redef]
app/models/base.py:71: error: Name "BaseModel" already defined (possibly by an import)  [no-redef]
app/models/base.py:79: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/models/base.py:84: error: Function is missing a type annotation  [no-untyped-def]
app/core/optimizer/engine.py:13: error: Library stubs not installed for "yaml"  [import-untyped]
app/core/optimizer/engine.py:13: note: Hint: "python3 -m pip install types-PyYAML"
app/core/optimizer/engine.py:13: note: (or run "mypy --install-types" to install all missing stub packages)
app/core/optimizer/engine.py:13: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
app/core/optimizer/engine.py:80: error: Returning Any from function declared to return "dict[str, float]"  [no-any-return]
app/core/optimizer/engine.py:84: error: Returning Any from function declared to return "dict[str, float]"  [no-any-return]
app/core/optimizer/engine.py:88: error: Returning Any from function declared to return "dict[str, dict[str, int]]"  [no-any-return]
app/core/optimizer/engine.py:92: error: Returning Any from function declared to return "dict[str, float]"  [no-any-return]
app/core/optimizer/engine.py:96: error: Returning Any from function declared to return "dict[str, float]"  [no-any-return]
app/core/optimizer/engine.py:434: error: Need type annotation for "role_distribution" (hint: "role_distribution: dict[<type>, <type>] = ...")  [var-annotated]
app/core/optimizer/engine.py:532: error: "CompositionOptimizationRequest" has no attribute "fixed_roles"  [attr-defined]
app/core/optimizer/engine.py:534: error: "CompositionOptimizationRequest" has no attribute "fixed_roles"  [attr-defined]
app/core/optimizer/engine.py:603: error: Missing named argument "created_by" for "CompositionCreate"  [call-arg]
app/core/optimizer/engine.py:656: error: Argument 1 to "get" of "dict" has incompatible type "int | None"; expected "int"  [arg-type]
app/core/optimizer/engine.py:661: error: Missing named argument "created_by_username" for "Composition"  [call-arg]
app/schemas/team_member.py:34: error: Incompatible types in assignment (expression has type "TeamRole | None", base class "TeamMemberBase" defined the type as "TeamRole")  [assignment]
app/schemas/team_member.py:37: error: Incompatible types in assignment (expression has type "bool | None", base class "TeamMemberBase" defined the type as "bool")  [assignment]
app/schemas/team.py:41: error: Incompatible types in assignment (expression has type "str | None", base class "TeamBase" defined the type as "str")  [assignment]
app/schemas/team.py:45: error: Incompatible types in assignment (expression has type "TeamStatus | None", base class "TeamBase" defined the type as "TeamStatus")  [assignment]
app/schemas/team.py:100: error: Function is missing a type annotation  [no-untyped-def]
app/schemas/team.py:104: error: Name "v" is not defined  [name-defined]
app/models/webhook.py:67: error: Name "User" is not defined  [name-defined]
app/models/build.py:90: error: Name "User" is not defined  [name-defined]
app/models/build.py:93: error: Name "Composition" is not defined  [name-defined]
app/models/build.py:101: error: Name "Profession" is not defined  [name-defined]
app/models/build.py:107: error: Name "Team" is not defined  [name-defined]
app/models/build.py:166: error: Name "Profession" is not defined  [name-defined]
app/models/build.py:175: error: Name "Profession" is not defined  [name-defined]
app/models/profession.py:178: error: Incompatible types in assignment (expression has type "None", variable has type "SQLCoreOperations[Profession] | Profession")  [assignment]
app/models/elite_specialization.py:146: error: "EliteSpecialization" has no attribute "builds"  [attr-defined]
app/crud/crud_webhook.py:35: error: Incompatible return value type (got "Sequence[Webhook]", expected "list[Webhook]")  [return-value]
app/crud/crud_webhook.py:50: error: Incompatible return value type (got "Sequence[Webhook]", expected "list[Webhook]")  [return-value]
app/core/logging.py:23: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
app/core/logging.py:23: note: Possible overload variants:
app/core/logging.py:23: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/core/logging.py:23: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/core/logging.py:23: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
app/core/logging.py:23: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
app/core/logging.py:141: error: Missing named argument "LOG_LEVEL" for "LoggingSettings"  [call-arg]
app/core/logging.py:148: error: Unsupported right operand type for in ("object | Any")  [operator]
app/core/logging.py:148: error: Value of type "tuple[object, ...] | Mapping[str, object] | None" is not indexable  [index]
app/core/logging.py:148: error: Invalid index type "int" for "Mapping[str, object]"; expected type "str"  [index]
app/core/config.py:107: error: Function is missing a return type annotation  [no-untyped-def]
app/core/config.py:111: error: Function is missing a type annotation  [no-untyped-def]
app/core/config.py:114: error: Function is missing a type annotation  [no-untyped-def]
app/core/config.py:117: error: Function is missing a type annotation  [no-untyped-def]
app/core/config.py:121: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
app/schemas/build.py:146: error: "Settings" has no attribute "FORBIDDEN_PROFESSION_COMBINATIONS"  [attr-defined]
app/schemas/build.py:390: error: Function is missing a return type annotation  [no-untyped-def]
app/schemas/build.py:390: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/schemas/build.py:686: error: Value of type "JsonDict | Callable[[JsonDict], None] | Callable[[JsonDict, type[Any]], None] | None" is not indexable  [index]
app/schemas/build.py:686: error: Value of type "int | float | str | list[JsonValue] | JsonDict | Any | None" is not indexable  [index]
app/schemas/build.py:686: error: Invalid index type "int" for "dict[str, JsonValue]"; expected type "str"  [index]
app/schemas/build.py:688: error: Value of type "JsonDict | Callable[[JsonDict], None] | Callable[[JsonDict, type[Any]], None] | None" is not indexable  [index]
app/schemas/build.py:688: error: Value of type "int | float | str | list[JsonValue] | JsonDict | Any | None" is not indexable  [index]
app/schemas/build.py:688: error: Invalid index type "int" for "dict[str, JsonValue]"; expected type "str"  [index]
app/db/db_config.py:24: error: Function is missing a return type annotation  [no-untyped-def]
app/db/db_config.py:28: error: Need type annotation for "kwargs" (hint: "kwargs: dict[<type>, <type>] = ...")  [var-annotated]
app/db/db_config.py:73: error: Function is missing a return type annotation  [no-untyped-def]
app/db/db_config.py:73: note: Use "-> None" if function does not return a value
app/db/db_config.py:80: error: Function is missing a return type annotation  [no-untyped-def]
app/db/db_config.py:80: note: Use "-> None" if function does not return a value
app/db/base_class.py:29: error: Argument 1 to "declared_attr" has incompatible type "Callable[[Base], str]"; expected "Callable[..., Mapped[Never] | ORMDescriptor[Never] | SQLCoreOperations[Never]]"  [arg-type]
app/db/base_class.py:31: error: Returning Any from function declared to return "str"  [no-any-return]
app/db/base_class.py:31: error: "Base" has no attribute "__name__"; maybe "__tablename__"?  [attr-defined]
app/db/base_class.py:37: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/db/base_class.py:47: error: Function is missing a return type annotation  [no-untyped-def]
app/db/base_class.py:47: note: Use "-> None" if function does not return a value
app/db/base_class.py:54: error: Function is missing a type annotation  [no-untyped-def]
app/db/base_class.py:64: error: Function is missing a type annotation  [no-untyped-def]
app/db/base_class.py:71: error: Call to untyped function "setup_database_events" in typed context  [no-untyped-call]
app/core/logging_config.py:109: error: Function is missing a type annotation  [no-untyped-def]
app/core/key_rotation.py:111: error: Returning Any from function declared to return "dict[Any, Any]"  [no-any-return]
app/core/key_rotation.py:121: error: Returning Any from function declared to return "dict[Any, Any]"  [no-any-return]
app/core/db_monitor.py:81: error: Function is missing a return type annotation  [no-untyped-def]
app/core/db_monitor.py:81: note: Use "-> None" if function does not return a value
app/core/db_monitor.py:129: error: "None" object is not iterable  [misc]
app/core/db_monitor.py:229: error: Argument "slow_queries" to "DatabaseMetrics" has incompatible type "Any | None"; expected "int"  [arg-type]
app/core/db_monitor.py:231: error: Argument "locks_waiting" to "DatabaseMetrics" has incompatible type "Any | None"; expected "int"  [arg-type]
app/core/db_monitor.py:340: error: Function is missing a return type annotation  [no-untyped-def]
app/core/db_monitor.py:349: error: "DatabaseMonitor" has no attribute "collect_issues"  [attr-defined]
app/core/database.py:24: error: Function is missing a type annotation  [no-untyped-def]
app/core/database.py:52: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/core/database.py:87: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "type[NullPool]"  [dict-item]
app/core/database.py:88: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "type[NullPool]"  [dict-item]
app/core/database.py:89: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "type[NullPool]"  [dict-item]
app/core/database.py:90: error: Dict entry 3 has incompatible type "str": "int"; expected "str": "type[NullPool]"  [dict-item]
app/core/database.py:91: error: Dict entry 4 has incompatible type "str": "bool"; expected "str": "type[NullPool]"  [dict-item]
app/core/database.py:106: error: Function is missing a type annotation  [no-untyped-def]
app/core/database.py:107: error: Call to untyped function "setup_sqlite_pragmas" in typed context  [no-untyped-call]
app/core/database.py:152: error: Function is missing a return type annotation  [no-untyped-def]
app/core/database.py:153: error: Incompatible types in assignment (expression has type "AsyncSessionTransaction", variable has type "None")  [assignment]
app/core/database.py:156: error: Function is missing a type annotation  [no-untyped-def]
app/core/database.py:158: error: "None" has no attribute "rollback"  [attr-defined]
app/core/database.py:166: error: "None" has no attribute "commit"  [attr-defined]
app/core/database.py:170: error: "None" has no attribute "rollback"  [attr-defined]
app/core/database.py:189: error: "AsyncSession" has no attribute "expire_on_commit"  [attr-defined]
app/core/caching.py:38: error: "Settings" has no attribute "CACHE_REGIONS"  [attr-defined]
app/core/caching.py:45: error: "Settings" has no attribute "CACHE_IMPLEMENTATION"  [attr-defined]
app/core/caching.py:49: error: "Settings" has no attribute "REDIS_HOST"  [attr-defined]
app/core/caching.py:50: error: "Settings" has no attribute "REDIS_PORT"  [attr-defined]
app/core/caching.py:51: error: "Settings" has no attribute "REDIS_DB"  [attr-defined]
app/core/caching.py:52: error: "Settings" has no attribute "REDIS_PASSWORD"  [attr-defined]
app/core/caching.py:58: error: "Settings" has no attribute "CACHE_IMPLEMENTATION"  [attr-defined]
app/core/caching.py:75: error: Function is missing a type annotation  [no-untyped-def]
app/core/caching.py:81: error: Function is missing a type annotation  [no-untyped-def]
app/core/caching.py:85: error: "CachingQuery" has no attribute "_criterion"  [attr-defined]
app/core/caching.py:87: error: "CachingQuery" has no attribute "_entities"  [attr-defined]
app/core/caching.py:95: error: "CachingQuery" has no attribute "_criterion"  [attr-defined]
app/core/caching.py:101: error: Function is missing a type annotation  [no-untyped-def]
app/core/caching.py:163: error: Function is missing a return type annotation  [no-untyped-def]
app/core/caching.py:163: note: Use "-> None" if function does not return a value
app/core/caching.py:169: error: "Callable[[VarArg(Any), KwArg(Any)], Never]" has no attribute "_mapper_registry"  [attr-defined]
app/core/caching.py:170: error: "Callable[[VarArg(Any), KwArg(Any)], Never]" has no attribute "class_"  [attr-defined]
app/core/caching.py:172: error: "Callable[[VarArg(Any), KwArg(Any)], Never]" has no attribute "iterate_properties"  [attr-defined]
app/core/caching.py:175: error: "Callable[[VarArg(Any), KwArg(Any)], Never]" has no attribute "class_"  [attr-defined]
app/core/caching.py:176: error: Function is missing a type annotation  [no-untyped-def]
app/core/caching.py:182: error: "type[Session]" has no attribute "configure"  [attr-defined]
app/core/caching.py:193: error: Function is missing a return type annotation  [no-untyped-def]
app/core/caching.py:204: error: Function is missing a type annotation  [no-untyped-def]
app/core/caching.py:211: error: "Settings" has no attribute "CACHE_IMPLEMENTATION"  [attr-defined]
app/core/caching.py:212: error: "Settings" has no attribute "CACHE_REGIONS"  [attr-defined]
app/core/caching.py:217: error: "Settings" has no attribute "REDIS_HOST"  [attr-defined]
app/core/caching.py:218: error: "Settings" has no attribute "REDIS_PORT"  [attr-defined]
app/core/caching.py:219: error: "Settings" has no attribute "REDIS_DB"  [attr-defined]
app/core/caching.py:220: error: "Settings" has no attribute "REDIS_PASSWORD"  [attr-defined]
app/core/caching.py:222: error: "Settings" has no attribute "CACHE_IMPLEMENTATION"  [attr-defined]
app/core/caching.py:227: error: Function is missing a type annotation  [no-untyped-def]
app/core/security/keys.py:193: error: Incompatible return value type (got "tuple[str | None, Any]", expected "tuple[str, str]")  [return-value]
app/core/security/keys.py:193: error: Invalid index type "str | None" for "dict[str, dict[Any, Any]]"; expected type "str"  [index]
app/core/gw2/cache.py:114: error: Call to untyped function "from_url" in typed context  [no-untyped-call]
app/services/key_rotation.py:29: error: Function is missing a return type annotation  [no-untyped-def]
app/services/key_rotation.py:29: note: Use "-> None" if function does not return a value
app/services/key_rotation.py:35: error: Call to untyped function "_initialize_keys" in typed context  [no-untyped-call]
app/services/key_rotation.py:37: error: Function is missing a return type annotation  [no-untyped-def]
app/services/key_rotation.py:37: note: Use "-> None" if function does not return a value
app/services/key_rotation.py:99: error: Call to untyped function "_cleanup_old_keys" in typed context  [no-untyped-call]
app/services/key_rotation.py:107: error: Function is missing a return type annotation  [no-untyped-def]
app/services/key_rotation.py:151: error: Returning Any from function declared to return "dict[Any, Any]"  [no-any-return]
app/services/key_rotation.py:158: error: Module has no attribute "JWTError"; maybe "PyJWTError" or "PyJWKError"?  [attr-defined]
app/services/key_rotation.py:199: error: Call to untyped function "KeyRotationService" in typed context  [no-untyped-call]
app/schemas/__init__.py:33: error: Incompatible import of "TeamMember" (imported name has type "type[app.schemas.team_member.TeamMember]", local name has type "type[app.schemas.build.TeamMember]")  [assignment]
app/db/session.py:59: error: No overload variant of "sessionmaker" matches argument types "bool", "bool", "AsyncEngine", "type[AsyncSession]", "bool"  [call-overload]
app/db/session.py:59: note: Possible overload variants:
app/db/session.py:59: note:     def [_S: Session] sessionmaker(self, bind: Engine | Connection | None = ..., *, class_: type[_S], autoflush: bool = ..., expire_on_commit: bool = ..., info: dict[Any, Any] | None = ..., **kw: Any) -> sessionmaker[_S]
app/db/session.py:59: note:     def [_S: Session] sessionmaker(self, bind: Engine | Connection | None = ..., *, autoflush: bool = ..., expire_on_commit: bool = ..., info: dict[Any, Any] | None = ..., **kw: Any) -> sessionmaker[Session]
app/db/factories.py:14: error: No overload variant of "sessionmaker" matches argument types "bool", "bool", "AsyncEngine", "type[AsyncSession]", "bool"  [call-overload]
app/db/factories.py:14: note: Possible overload variants:
app/db/factories.py:14: note:     def [_S: Session] sessionmaker(self, bind: Engine | Connection | None = ..., *, class_: type[_S], autoflush: bool = ..., expire_on_commit: bool = ..., info: dict[Any, Any] | None = ..., **kw: Any) -> sessionmaker[_S]
app/db/factories.py:14: note:     def [_S: Session] sessionmaker(self, bind: Engine | Connection | None = ..., *, autoflush: bool = ..., expire_on_commit: bool = ..., info: dict[Any, Any] | None = ..., **kw: Any) -> sessionmaker[Session]
app/core/utils.py:32: error: Name "timezone" is not defined  [name-defined]
app/core/utils.py:69: error: Incompatible types in assignment (expression has type "int", target has type "str")  [assignment]
app/core/utils.py:70: error: Incompatible types in assignment (expression has type "int", target has type "str")  [assignment]
app/core/utils.py:78: error: Dict entry 4 has incompatible type "str": "int"; expected "str": "str | None"  [dict-item]
app/core/utils.py:79: error: Dict entry 5 has incompatible type "str": "int"; expected "str": "str | None"  [dict-item]
app/core/utils.py:80: error: Dict entry 6 has incompatible type "str": "int"; expected "str": "str | None"  [dict-item]
app/core/utils.py:81: error: Dict entry 7 has incompatible type "str": "int"; expected "str": "str | None"  [dict-item]
app/core/utils.py:85: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/core/utils.py:134: error: Name "request_id_var" is not defined  [name-defined]
app/core/utils.py:143: error: Name "logger" is not defined  [name-defined]
app/core/performance.py:91: error: "Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]" has no attribute "add_middleware"  [attr-defined]
app/core/pagination.py:43: error: Need type annotation for "json_encoders" (hint: "json_encoders: dict[<type>, <type>] = ...")  [var-annotated]
app/core/middleware.py:137: error: Need type annotation for "requests" (hint: "requests: dict[<type>, <type>] = ...")  [var-annotated]
app/core/middleware.py:197: error: "Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]" has no attribute "add_middleware"  [attr-defined]
app/core/middleware.py:209: error: "Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]" has no attribute "add_middleware"  [attr-defined]
app/core/middleware.py:212: error: "Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]" has no attribute "add_middleware"  [attr-defined]
app/core/middleware.py:213: error: "Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]" has no attribute "add_middleware"  [attr-defined]
app/core/middleware.py:214: error: "Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]" has no attribute "add_middleware"  [attr-defined]
app/core/middleware.py:218: error: "Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[None]]], Awaitable[None]]" has no attribute "add_middleware"  [attr-defined]
app/core/key_rotation_service.py:28: error: Function is missing a return type annotation  [no-untyped-def]
app/core/key_rotation_service.py:28: note: Use "-> None" if function does not return a value
app/core/key_rotation_service.py:36: error: Call to untyped function "_initialize_keys" in typed context  [no-untyped-call]
app/core/key_rotation_service.py:38: error: Function is missing a return type annotation  [no-untyped-def]
app/core/key_rotation_service.py:38: note: Use "-> None" if function does not return a value
app/core/key_rotation_service.py:101: error: Call to untyped function "_cleanup_old_keys" in typed context  [no-untyped-call]
app/core/key_rotation_service.py:109: error: Function is missing a return type annotation  [no-untyped-def]
app/core/key_rotation_service.py:145: error: Call to untyped function "items" in typed context  [no-untyped-call]
app/core/key_rotation_service.py:153: error: Returning Any from function declared to return "dict[Any, Any]"  [no-any-return]
app/core/key_rotation_service.py:160: error: Module has no attribute "JWTError"; maybe "PyJWTError" or "PyJWKError"?  [attr-defined]
app/core/key_rotation_service.py:199: error: Function is missing a type annotation  [no-untyped-def]
app/core/key_rotation_service.py:203: error: Function is missing a return type annotation  [no-untyped-def]
app/core/key_rotation_service.py:209: error: Call to untyped function "KeyRotationService" in typed context  [no-untyped-call]
app/core/exceptions.py:10: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/core/exceptions.py:27: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/core/database_utils.py:40: error: Argument 1 to "Path" has incompatible type "str | None"; expected "str | PathLike[str]"  [arg-type]
app/core/database_utils.py:48: error: Incompatible return value type (got "Any | None", expected "int")  [return-value]
app/core/database_utils.py:122: error: Argument 1 to "copy2" has incompatible type "str | None"; expected "str | PathLike[str]"  [arg-type]
app/core/database_utils.py:145: error: "Sequence[str]" has no attribute "extend"  [attr-defined]
app/core/database_utils.py:149: error: "Sequence[str]" has no attribute "append"  [attr-defined]
app/core/database_utils.py:156: error: "Sequence[str]" has no attribute "append"  [attr-defined]
app/core/database_utils.py:178: error: Argument 1 to "DatabaseManager" has incompatible type "Engine | Connection"; expected "AsyncEngine"  [arg-type]
app/core/security/jwt.py:61: error: Function is missing a return type annotation  [no-untyped-def]
app/core/security/jwt.py:61: note: Use "-> None" if function does not return a value
app/core/security/jwt.py:142: error: Right operand of "and" is never evaluated  [unreachable]
app/core/security/jwt.py:172: error: Incompatible types in assignment (expression has type "bytes", variable has type "str")  [assignment]
app/core/security/jwt.py:210: error: Returning Any from function declared to return "str"  [no-any-return]
app/core/security/jwt.py:253: error: Incompatible types in assignment (expression has type "bytes", variable has type "str")  [assignment]
app/core/security/jwt.py:291: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
app/core/gw2/client.py:64: error: Function is missing a return type annotation  [no-untyped-def]
app/core/gw2/client.py:70: error: Function is missing a type annotation  [no-untyped-def]
app/core/gw2/client.py:216: error: Returning Any from function declared to return "Account"  [no-any-return]
app/core/gw2/client.py:222: error: Returning Any from function declared to return "list[str]"  [no-any-return]
app/core/gw2/client.py:229: error: Returning Any from function declared to return "Character"  [no-any-return]
app/core/gw2/client.py:234: error: Returning Any from function declared to return "Item"  [no-any-return]
app/core/gw2/client.py:246: error: Returning Any from function declared to return "ItemPrice"  [no-any-return]
app/core/gw2/client.py:253: error: Returning Any from function declared to return "list[str]"  [no-any-return]
app/core/gw2/client.py:257: error: Returning Any from function declared to return "Profession"  [no-any-return]
app/services/webhook_service.py:170: error: Incompatible return value type (got "Sequence[Webhook]", expected "list[Webhook]")  [return-value]
app/services/webhook_service.py:182: error: Incompatible return value type (got "Sequence[Webhook]", expected "list[Webhook]")  [return-value]
app/services/webhook_service.py:284: error: Argument 1 to "any" of "PropComparator" has incompatible type "str"; expected "ColumnElement[bool] | _HasClauseElement[bool] | SQLCoreOperations[bool] | ExpressionElementRole[bool] | TypedColumnsClauseRole[bool] | Callable[[], ColumnElement[bool]] | LambdaElement | None"  [arg-type]
app/services/webhook_service.py:305: error: "Settings" has no attribute "WEBHOOK_TIMEOUT"  [attr-defined]
app/models/user_role.py:47: error: "UserRole" has no attribute "user_id"  [attr-defined]
app/models/user_role.py:47: error: "UserRole" has no attribute "role_id"  [attr-defined]
app/models/composition_tag.py:47: error: Name "Tag" is not defined  [name-defined]
app/models/user.py:103: error: Name "Webhook" is not defined  [name-defined]
app/models/team.py:135: error: Name "team_members" is not defined  [name-defined]
app/models/team.py:136: error: Name "team_members" is not defined  [name-defined]
app/models/team.py:137: error: Name "team_members" is not defined  [name-defined]
app/models/team.py:158: error: Name "team_members" is not defined  [name-defined]
app/models/team.py:160: error: Name "team_members" is not defined  [name-defined]
app/models/team.py:161: error: Name "team_members" is not defined  [name-defined]
app/models/composition.py:107: error: Function is missing a type annotation  [no-untyped-def]
app/core/limiter.py:82: error: Statement is unreachable  [unreachable]
app/core/limiter.py:107: error: Function is missing a return type annotation  [no-untyped-def]
app/core/limiter.py:107: note: Use "-> None" if function does not return a value
app/core/limiter.py:113: error: Function is missing a return type annotation  [no-untyped-def]
app/core/tasks/key_rotation_task.py:46: error: Call to untyped function "update_environment_keys" in typed context  [no-untyped-call]
app/core/tasks/key_rotation_task.py:69: error: Function is missing a return type annotation  [no-untyped-def]
app/core/tasks/key_rotation_task.py:69: note: Use "-> None" if function does not return a value
app/core/tasks/key_rotation_task.py:73: error: "Settings" has no attribute "BASE_DIR"  [attr-defined]
app/core/tasks/key_rotation_task.py:120: error: Function is missing a return type annotation  [no-untyped-def]
app/core/tasks/key_rotation_task.py:120: note: Use "-> None" if function does not return a value
app/core/tasks/key_rotation_task.py:127: error: Function is missing a return type annotation  [no-untyped-def]
app/core/tasks/key_rotation_task.py:127: note: Use "-> None" if function does not return a value
app/core/tasks/key_rotation_task.py:156: error: Call to untyped function "schedule_key_rotation" in typed context  [no-untyped-call]
app/core/security/password_utils.py:124: error: Incompatible return value type (got "Any | None", expected "str")  [return-value]
app/core/security/password_utils.py:127: error: Incompatible return value type (got "None", expected "str")  [return-value]
app/crud/crud_role.py:23: error: Signature of "get_multi" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_role.py:23: note:      Superclass:
app/crud/crud_role.py:23: note:          def get_multi(self, db: Session, *, skip: int = ..., limit: int = ..., **filters: Any) -> list[Role]
app/crud/crud_role.py:23: note:      Subclass:
app/crud/crud_role.py:23: note:          def get_multi(self, db: Session, *, skip: int = ..., limit: int = ..., is_active: bool = ...) -> list[Role]
app/crud/crud_role.py:24: error: Incompatible default for argument "is_active" (default has type "None", argument has type "bool")  [assignment]
app/crud/crud_role.py:24: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
app/crud/crud_role.py:24: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
app/crud/crud_role.py:30: error: "type[Role]" has no attribute "is_active"  [attr-defined]
app/crud/crud_permission.py:25: error: "type[Permission]" has no attribute "code"  [attr-defined]
app/crud/crud_permission.py:27: error: Signature of "get_multi" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_permission.py:27: note:      Superclass:
app/crud/crud_permission.py:27: note:          def get_multi(self, db: Session, *, skip: int = ..., limit: int = ..., **filters: Any) -> list[Permission]
app/crud/crud_permission.py:27: note:      Subclass:
app/crud/crud_permission.py:27: note:          def get_multi(self, db: Session, *, skip: int = ..., limit: int = ..., is_active: bool = ...) -> list[Permission]
app/crud/crud_permission.py:28: error: Incompatible default for argument "is_active" (default has type "None", argument has type "bool")  [assignment]
app/crud/crud_permission.py:28: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
app/crud/crud_permission.py:28: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
app/crud/crud_permission.py:34: error: "type[Permission]" has no attribute "is_active"  [attr-defined]
app/api/dependencies.py:25: error: Module "app.core.security" has no attribute "oauth2_scheme"  [attr-defined]
app/api/dependencies.py:149: error: Function is missing a return type annotation  [no-untyped-def]
app/api/dependencies.py:168: error: "User" has no attribute "permissions"  [attr-defined]
app/lifespan.py:40: error: Function is missing a return type annotation  [no-untyped-def]
app/lifespan.py:40: note: Use "-> None" if function does not return a value
app/crud/user.py:150: error: Signature of "update" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/user.py:150: note:      Superclass:
app/crud/user.py:150: note:          def update(self, db: Session, *, db_obj: User, obj_in: UserUpdate | dict[str, Any], commit: bool = ...) -> User
app/crud/user.py:150: note:      Subclass:
app/crud/user.py:150: note:          def update(self, db: Session, *, db_obj: User, obj_in: UserUpdate | dict[str, Any]) -> User
app/crud/user.py:171: error: Signature of "update_async" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/user.py:171: note:      Superclass:
app/crud/user.py:171: note:          def update_async(self, db: AsyncSession, *, db_obj: User, obj_in: UserUpdate | dict[str, Any], commit: bool = ...) -> Coroutine[Any, Any, User]
app/crud/user.py:171: note:      Subclass:
app/crud/user.py:171: note:          def update_async(self, db: AsyncSession, *, db_obj: User, obj_in: UserUpdate | dict[str, Any]) -> Coroutine[Any, Any, User]
app/crud/user.py:231: error: Incompatible types in assignment (expression has type "Role | None", variable has type "User | None")  [assignment]
app/crud/profession.py:17: error: Name "Session" is not defined  [name-defined]
app/crud/profession.py:20: error: Returning Any from function declared to return "Profession | None"  [no-any-return]
app/crud/profession.py:31: error: Name "Session" is not defined  [name-defined]
app/crud/profession.py:39: error: Returning Any from function declared to return "Profession | None"  [no-any-return]
app/crud/profession.py:54: error: Name "Session" is not defined  [name-defined]
app/crud/profession.py:78: error: Name "Session" is not defined  [name-defined]
app/crud/profession.py:89: error: Name "Session" is not defined  [name-defined]
app/crud/profession.py:92: error: Returning Any from function declared to return "int | None"  [no-any-return]
app/crud/elite_specialization.py:67: error: "type[EliteSpecialization]" has no attribute "specialization_id"  [attr-defined]
app/crud/elite_specialization.py:74: error: "type[EliteSpecialization]" has no attribute "specialization_id"  [attr-defined]
app/crud/crud_team_member.py:23: error: Return type "Coroutine[Any, Any, TeamMember | None]" of "get" incompatible with return type "TeamMember | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_team_member.py:24: error: Argument 1 of "get" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_team_member.py:24: note: This violates the Liskov substitution principle
app/crud/crud_team_member.py:24: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_team_member.py:43: error: Returning Any from function declared to return "TeamMember | None"  [no-any-return]
app/crud/crud_team_member.py:94: error: Returning Any from function declared to return "TeamMember | None"  [no-any-return]
app/crud/crud_team_member.py:149: error: Returning Any from function declared to return "list[TeamMember]"  [no-any-return]
app/crud/crud_team_member.py:155: error: "type[TeamMember]" has no attribute "joined_at"  [attr-defined]
app/crud/crud_team_member.py:174: error: Incompatible return value type (got "Sequence[TeamMember]", expected "list[TeamMember]")  [return-value]
app/crud/crud_team_member.py:204: error: Returning Any from function declared to return "list[TeamMember]"  [no-any-return]
app/crud/crud_team_member.py:210: error: "type[TeamMember]" has no attribute "joined_at"  [attr-defined]
app/crud/crud_team_member.py:230: error: Incompatible return value type (got "Sequence[TeamMember]", expected "list[TeamMember]")  [return-value]
app/crud/crud_team_member.py:232: error: Return type "Coroutine[Any, Any, TeamMember]" of "create" incompatible with return type "TeamMember" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_team_member.py:232: error: Argument 1 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_team_member.py:232: note: This violates the Liskov substitution principle
app/crud/crud_team_member.py:232: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_team_member.py:232: error: Argument 2 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "TeamMemberCreate | dict[str, Any]"  [override]
app/crud/crud_team_member.py:253: error: Signature of "update" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_team_member.py:253: note:      Superclass:
app/crud/crud_team_member.py:253: note:          def update(self, db: Session, *, db_obj: TeamMember, obj_in: TeamMemberUpdate | dict[str, Any], commit: bool = ...) -> TeamMember
app/crud/crud_team_member.py:253: note:      Subclass:
app/crud/crud_team_member.py:253: note:          def update(self, db: AsyncSession, *, db_obj: TeamMember, obj_in: TeamMemberUpdate | dict[str, Any]) -> Coroutine[Any, Any, TeamMember]
app/crud/crud_team_member.py:301: error: Return type "Coroutine[Any, Any, TeamMember | None]" of "remove" incompatible with return type "TeamMember | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_team_member.py:301: error: Argument 1 of "remove" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_team_member.py:301: note: This violates the Liskov substitution principle
app/crud/crud_team_member.py:301: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_team.py:23: error: Return type "Coroutine[Any, Any, Team | None]" of "get" incompatible with return type "Team | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_team.py:24: error: Argument 1 of "get" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_team.py:24: note: This violates the Liskov substitution principle
app/crud/crud_team.py:24: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_team.py:43: error: Returning Any from function declared to return "Team | None"  [no-any-return]
app/crud/crud_team.py:53: error: "type[Composition]" has no attribute "tags"  [attr-defined]
app/crud/crud_team.py:88: error: Returning Any from function declared to return "Team | None"  [no-any-return]
app/crud/crud_team.py:98: error: "type[Composition]" has no attribute "tags"  [attr-defined]
app/crud/crud_team.py:141: error: Signature of "update" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_team.py:141: note:      Superclass:
app/crud/crud_team.py:141: note:          def update(self, db: Session, *, db_obj: Team, obj_in: TeamUpdate | dict[str, Any], commit: bool = ...) -> Team
app/crud/crud_team.py:141: note:      Subclass:
app/crud/crud_team.py:141: note:          def update(self, db: AsyncSession, *, db_obj: Team, obj_in: TeamUpdate | dict[str, Any]) -> Coroutine[Any, Any, Team]
app/crud/crud_team.py:173: error: Too many arguments for "invalidate_cache" of "CRUDTeam"  [call-arg]
app/crud/crud_team.py:173: error: Argument 1 to "invalidate_cache" of "CRUDTeam" has incompatible type "AsyncSession"; expected "int"  [arg-type]
app/crud/crud_team.py:177: error: Return type "Coroutine[Any, Any, Team | None]" of "remove" incompatible with return type "Team | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_team.py:177: error: Argument 1 of "remove" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_team.py:177: note: This violates the Liskov substitution principle
app/crud/crud_team.py:177: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_team.py:193: error: Too many arguments for "invalidate_cache" of "CRUDTeam"  [call-arg]
app/crud/crud_team.py:193: error: Argument 1 to "invalidate_cache" of "CRUDTeam" has incompatible type "AsyncSession"; expected "int"  [arg-type]
app/crud/crud_team.py:204: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:205: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:212: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:222: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:223: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:230: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:231: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:265: error: Returning Any from function declared to return "list[User]"  [no-any-return]
app/crud/crud_team.py:270: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:271: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:288: error: Incompatible return value type (got "Sequence[User]", expected "list[User]")  [return-value]
app/crud/crud_team.py:293: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:294: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:295: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:335: error: Returning Any from function declared to return "list[Team]"  [no-any-return]
app/crud/crud_team.py:340: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:341: error: Name "team_members" is not defined  [name-defined]
app/crud/crud_team.py:363: error: Incompatible return value type (got "Sequence[Team]", expected "list[Team]")  [return-value]
app/crud/crud_team.py:377: error: Name "db" is not defined  [name-defined]
app/crud/crud_team.py:385: error: Name "invalidate_cache" already defined on line 365  [no-redef]
app/crud/crud_tag.py:23: error: Return type "Coroutine[Any, Any, Tag | None]" of "get" incompatible with return type "Tag | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_tag.py:24: error: Argument 1 of "get" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_tag.py:24: note: This violates the Liskov substitution principle
app/crud/crud_tag.py:24: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_tag.py:43: error: Returning Any from function declared to return "Tag | None"  [no-any-return]
app/crud/crud_tag.py:51: error: "type[Tag]" has no attribute "compositions"  [attr-defined]
app/crud/crud_tag.py:84: error: Returning Any from function declared to return "Tag | None"  [no-any-return]
app/crud/crud_tag.py:92: error: "type[Tag]" has no attribute "compositions"  [attr-defined]
app/crud/crud_tag.py:105: error: Return type "Coroutine[Any, Any, list[Tag]]" of "get_multi" incompatible with return type "list[Tag]" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_tag.py:107: error: Argument 1 of "get_multi" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_tag.py:107: note: This violates the Liskov substitution principle
app/crud/crud_tag.py:107: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_tag.py:131: error: Returning Any from function declared to return "list[Tag]"  [no-any-return]
app/crud/crud_tag.py:139: error: "type[Tag]" has no attribute "compositions"  [attr-defined]
app/crud/crud_tag.py:150: error: Incompatible return value type (got "Sequence[Tag]", expected "list[Tag]")  [return-value]
app/crud/crud_tag.py:180: error: Returning Any from function declared to return "list[Tag]"  [no-any-return]
app/crud/crud_tag.py:195: error: "type[Tag]" has no attribute "compositions"  [attr-defined]
app/crud/crud_tag.py:206: error: Incompatible return value type (got "Sequence[Tag]", expected "list[Tag]")  [return-value]
app/crud/crud_tag.py:208: error: Return type "Coroutine[Any, Any, Tag]" of "create" incompatible with return type "Tag" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_tag.py:208: error: Argument 1 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_tag.py:208: note: This violates the Liskov substitution principle
app/crud/crud_tag.py:208: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_tag.py:208: error: Argument 2 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "TagCreate | dict[str, Any]"  [override]
app/crud/crud_tag.py:229: error: Signature of "update" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_tag.py:229: note:      Superclass:
app/crud/crud_tag.py:229: note:          def update(self, db: Session, *, db_obj: Tag, obj_in: TagUpdate | dict[str, Any], commit: bool = ...) -> Tag
app/crud/crud_tag.py:229: note:      Subclass:
app/crud/crud_tag.py:229: note:          def update(self, db: AsyncSession, *, db_obj: Tag, obj_in: TagUpdate | dict[str, Any]) -> Coroutine[Any, Any, Tag]
app/crud/crud_tag.py:267: error: Return type "Coroutine[Any, Any, Tag | None]" of "remove" incompatible with return type "Tag | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_tag.py:267: error: Argument 1 of "remove" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_tag.py:267: note: This violates the Liskov substitution principle
app/crud/crud_tag.py:267: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_profession.py:23: error: Return type "Coroutine[Any, Any, Profession | None]" of "get" incompatible with return type "Profession | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_profession.py:24: error: Argument 1 of "get" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_profession.py:24: note: This violates the Liskov substitution principle
app/crud/crud_profession.py:24: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_profession.py:43: error: Returning Any from function declared to return "Profession | None"  [no-any-return]
app/crud/crud_profession.py:52: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_profession.py:93: error: Returning Any from function declared to return "Profession | None"  [no-any-return]
app/crud/crud_profession.py:106: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_profession.py:126: error: Signature of "get_multi" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_profession.py:126: note:      Superclass:
app/crud/crud_profession.py:126: note:          def get_multi(self, db: Session, *, skip: int = ..., limit: int = ..., **filters: Any) -> list[Profession]
app/crud/crud_profession.py:126: note:      Subclass:
app/crud/crud_profession.py:126: note:          def get_multi(self, db: AsyncSession, *, skip: int = ..., limit: int = ..., include_inactive: bool = ..., load_relations: bool = ...) -> Coroutine[Any, Any, list[Profession]]
app/crud/crud_profession.py:154: error: Returning Any from function declared to return "list[Profession]"  [no-any-return]
app/crud/crud_profession.py:169: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_profession.py:182: error: Incompatible return value type (got "Sequence[Profession]", expected "list[Profession]")  [return-value]
app/crud/crud_profession.py:210: error: Returning Any from function declared to return "Profession | None"  [no-any-return]
app/crud/crud_profession.py:233: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_profession.py:251: error: Statement is unreachable  [unreachable]
app/crud/crud_profession.py:253: error: Return type "Coroutine[Any, Any, Profession]" of "create" incompatible with return type "Profession" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_profession.py:253: error: Argument 1 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_profession.py:253: note: This violates the Liskov substitution principle
app/crud/crud_profession.py:253: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_profession.py:253: error: Argument 2 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "ProfessionCreate | dict[str, Any]"  [override]
app/crud/crud_profession.py:274: error: Signature of "update" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_profession.py:274: note:      Superclass:
app/crud/crud_profession.py:274: note:          def update(self, db: Session, *, db_obj: Profession, obj_in: ProfessionUpdate | dict[str, Any], commit: bool = ...) -> Profession
app/crud/crud_profession.py:274: note:      Subclass:
app/crud/crud_profession.py:274: note:          def update(self, db: AsyncSession, *, db_obj: Profession, obj_in: ProfessionUpdate | dict[str, Any]) -> Coroutine[Any, Any, Profession]
app/crud/crud_profession.py:316: error: Return type "Coroutine[Any, Any, Profession | None]" of "remove" incompatible with return type "Profession | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_profession.py:316: error: Argument 1 of "remove" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_profession.py:316: note: This violates the Liskov substitution principle
app/crud/crud_profession.py:316: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_elite_specialization.py:29: error: Return type "Coroutine[Any, Any, EliteSpecialization | None]" of "get" incompatible with return type "EliteSpecialization | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_elite_specialization.py:30: error: Argument 1 of "get" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_elite_specialization.py:30: note: This violates the Liskov substitution principle
app/crud/crud_elite_specialization.py:30: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_elite_specialization.py:49: error: Returning Any from function declared to return "EliteSpecialization | None"  [no-any-return]
app/crud/crud_elite_specialization.py:60: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_elite_specialization.py:93: error: Returning Any from function declared to return "EliteSpecialization | None"  [no-any-return]
app/crud/crud_elite_specialization.py:106: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_elite_specialization.py:139: error: Returning Any from function declared to return "list[EliteSpecialization]"  [no-any-return]
app/crud/crud_elite_specialization.py:150: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_elite_specialization.py:160: error: Incompatible return value type (got "Sequence[EliteSpecialization]", expected "list[EliteSpecialization]")  [return-value]
app/crud/crud_elite_specialization.py:189: error: Returning Any from function declared to return "list[EliteSpecialization]"  [no-any-return]
app/crud/crud_elite_specialization.py:193: error: "type[EliteSpecialization]" has no attribute "game_mode_affinity"  [attr-defined]
app/crud/crud_elite_specialization.py:207: error: "type[EliteSpecialization]" has no attribute "builds"  [attr-defined]
app/crud/crud_elite_specialization.py:218: error: Incompatible return value type (got "Sequence[EliteSpecialization]", expected "list[EliteSpecialization]")  [return-value]
app/crud/crud_elite_specialization.py:219: error: Statement is unreachable  [unreachable]
app/crud/crud_elite_specialization.py:221: error: Return type "Coroutine[Any, Any, EliteSpecialization]" of "create" incompatible with return type "EliteSpecialization" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_elite_specialization.py:222: error: Argument 1 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_elite_specialization.py:222: note: This violates the Liskov substitution principle
app/crud/crud_elite_specialization.py:222: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_elite_specialization.py:222: error: Argument 2 of "create" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "EliteSpecializationCreate | dict[str, Any]"  [override]
app/crud/crud_elite_specialization.py:244: error: Signature of "update" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_elite_specialization.py:244: note:      Superclass:
app/crud/crud_elite_specialization.py:244: note:          def update(self, db: Session, *, db_obj: EliteSpecialization, obj_in: EliteSpecializationUpdate | dict[str, Any], commit: bool = ...) -> EliteSpecialization
app/crud/crud_elite_specialization.py:244: note:      Subclass:
app/crud/crud_elite_specialization.py:244: note:          def update(self, db: AsyncSession, *, db_obj: EliteSpecialization, obj_in: EliteSpecializationUpdate | dict[str, Any]) -> Coroutine[Any, Any, EliteSpecialization]
app/crud/crud_elite_specialization.py:291: error: Return type "Coroutine[Any, Any, EliteSpecialization | None]" of "remove" incompatible with return type "EliteSpecialization | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_elite_specialization.py:292: error: Argument 1 of "remove" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_elite_specialization.py:292: note: This violates the Liskov substitution principle
app/crud/crud_elite_specialization.py:292: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_elite_specialization.py:358: error: "EliteSpecialization" has no attribute "game_mode_affinity"  [attr-defined]
app/crud/crud_elite_specialization.py:359: error: "EliteSpecialization" has no attribute "game_mode_affinity"  [attr-defined]
app/crud/crud_composition.py:38: error: Call to untyped function "Composition" in typed context  [no-untyped-call]
app/crud/crud_composition.py:76: error: Returning Any from function declared to return "list[Composition]"  [no-any-return]
app/crud/crud_composition.py:90: error: "type[Composition]" has no attribute "tags"  [attr-defined]
app/crud/crud_composition.py:103: error: Incompatible return value type (got "Sequence[Composition]", expected "list[Composition]")  [return-value]
app/crud/crud_composition.py:105: error: Return type "Coroutine[Any, Any, Composition | None]" of "get" incompatible with return type "Composition | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_composition.py:106: error: Argument 1 of "get" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_composition.py:106: note: This violates the Liskov substitution principle
app/crud/crud_composition.py:106: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_composition.py:125: error: Returning Any from function declared to return "Composition | None"  [no-any-return]
app/crud/crud_composition.py:133: error: "type[Composition]" has no attribute "tags"  [attr-defined]
app/crud/crud_composition.py:134: error: "type[Composition]" has no attribute "builds"  [attr-defined]
app/crud/crud_composition.py:135: error: "type[Composition]" has no attribute "owner"  [attr-defined]
app/crud/crud_composition.py:190: error: "list[User]" has no attribute "id"  [attr-defined]
app/crud/crud_composition.py:192: error: Argument 1 to "remove" of "list" has incompatible type "list[User]"; expected "User"  [arg-type]
app/crud/crud_composition.py:250: error: Returning Any from function declared to return "list[Composition]"  [no-any-return]
app/crud/crud_composition.py:264: error: "type[Composition]" has no attribute "tags"  [attr-defined]
app/crud/crud_composition.py:265: error: "type[Composition]" has no attribute "builds"  [attr-defined]
app/crud/crud_composition.py:266: error: "type[Composition]" has no attribute "owner"  [attr-defined]
app/crud/crud_composition.py:278: error: Incompatible return value type (got "Sequence[Composition]", expected "list[Composition]")  [return-value]
app/crud/crud_composition.py:295: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:296: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:297: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:304: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:330: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:331: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:332: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:339: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:340: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_composition.py:341: error: Name "composition_tags" is not defined  [name-defined]
app/crud/crud_build.py:23: error: Return type "Coroutine[Any, Any, Build | None]" of "get" incompatible with return type "Build | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_build.py:24: error: Argument 1 of "get" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_build.py:24: note: This violates the Liskov substitution principle
app/crud/crud_build.py:24: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_build.py:43: error: Returning Any from function declared to return "Build | None"  [no-any-return]
app/crud/crud_build.py:51: error: "type[Build]" has no attribute "profession"  [attr-defined]
app/crud/crud_build.py:52: error: "type[Build]" has no attribute "elite_specialization"  [attr-defined]
app/crud/crud_build.py:53: error: "type[Build]" has no attribute "created_by_user"  [attr-defined]
app/crud/crud_build.py:95: error: Returning Any from function declared to return "list[Build]"  [no-any-return]
app/crud/crud_build.py:109: error: "type[Build]" has no attribute "profession"  [attr-defined]
app/crud/crud_build.py:110: error: "type[Build]" has no attribute "elite_specialization"  [attr-defined]
app/crud/crud_build.py:122: error: Incompatible return value type (got "Sequence[Build]", expected "list[Build]")  [return-value]
app/crud/crud_build.py:152: error: Returning Any from function declared to return "list[Build]"  [no-any-return]
app/crud/crud_build.py:157: error: "type[Build]" has no attribute "profession_id"  [attr-defined]
app/crud/crud_build.py:166: error: "type[Build]" has no attribute "profession"  [attr-defined]
app/crud/crud_build.py:167: error: "type[Build]" has no attribute "elite_specialization"  [attr-defined]
app/crud/crud_build.py:168: error: "type[Build]" has no attribute "created_by_user"  [attr-defined]
app/crud/crud_build.py:179: error: Incompatible return value type (got "Sequence[Build]", expected "list[Build]")  [return-value]
app/crud/crud_build.py:209: error: Returning Any from function declared to return "list[Build]"  [no-any-return]
app/crud/crud_build.py:214: error: "type[Build]" has no attribute "elite_specialization_id"  [attr-defined]
app/crud/crud_build.py:223: error: "type[Build]" has no attribute "profession"  [attr-defined]
app/crud/crud_build.py:224: error: "type[Build]" has no attribute "elite_specialization"  [attr-defined]
app/crud/crud_build.py:225: error: "type[Build]" has no attribute "created_by_user"  [attr-defined]
app/crud/crud_build.py:236: error: Incompatible return value type (got "Sequence[Build]", expected "list[Build]")  [return-value]
app/crud/crud_build.py:238: error: Signature of "create" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_build.py:238: note:      Superclass:
app/crud/crud_build.py:238: note:          def create(self, db: Session, *, obj_in: BuildCreate | dict[str, Any]) -> Build
app/crud/crud_build.py:238: note:      Subclass:
app/crud/crud_build.py:238: note:          def create(self, db: AsyncSession, *, obj_in: BuildCreate, created_by: int) -> Coroutine[Any, Any, Build]
app/crud/crud_build.py:267: error: "Build" has no attribute "profession_id"; maybe "professions"?  [attr-defined]
app/crud/crud_build.py:268: error: "Build" has no attribute "elite_specialization_id"  [attr-defined]
app/crud/crud_build.py:273: error: Signature of "update" incompatible with supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_build.py:273: note:      Superclass:
app/crud/crud_build.py:273: note:          def update(self, db: Session, *, db_obj: Build, obj_in: BuildUpdate | dict[str, Any], commit: bool = ...) -> Build
app/crud/crud_build.py:273: note:      Subclass:
app/crud/crud_build.py:273: note:          def update(self, db: AsyncSession, *, db_obj: Build, obj_in: BuildUpdate | dict[str, Any]) -> Coroutine[Any, Any, Build]
app/crud/crud_build.py:297: error: "Build" has no attribute "profession_id"; maybe "professions"?  [attr-defined]
app/crud/crud_build.py:298: error: "Build" has no attribute "elite_specialization_id"  [attr-defined]
app/crud/crud_build.py:309: error: "Build" has no attribute "profession_id"; maybe "professions"?  [attr-defined]
app/crud/crud_build.py:310: error: "Build" has no attribute "elite_specialization_id"  [attr-defined]
app/crud/crud_build.py:325: error: Return type "Coroutine[Any, Any, Build | None]" of "remove" incompatible with return type "Build | None" in supertype "app.crud.base.CRUDBase"  [override]
app/crud/crud_build.py:325: error: Argument 1 of "remove" is incompatible with supertype "app.crud.base.CRUDBase"; supertype defines the argument type as "Session"  [override]
app/crud/crud_build.py:325: note: This violates the Liskov substitution principle
app/crud/crud_build.py:325: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
app/crud/crud_build.py:342: error: "Build" has no attribute "profession_id"; maybe "professions"?  [attr-defined]
app/crud/crud_build.py:343: error: "Build" has no attribute "elite_specialization_id"  [attr-defined]
app/core/deps.py:31: error: Module has no attribute "ALGORITHM"  [attr-defined]
app/services/gw2_api.py:85: error: "Settings" has no attribute "GW2_API_KEY"  [attr-defined]
app/services/gw2_api.py:94: error: "Settings" has no attribute "PROJECT_VERSION"  [attr-defined]
app/services/gw2_api.py:95: error: "Settings" has no attribute "GW2_API_SCHEMA_VERSION"  [attr-defined]
app/services/gw2_api.py:139: error: "Settings" has no attribute "GW2_API_SCHEMA_VERSION"  [attr-defined]
app/services/gw2_api.py:212: error: Returning Any from function declared to return "list[str]"  [no-any-return]
app/services/gw2_api.py:273: error: Incompatible default for argument "spec_ids" (default has type "None", argument has type "list[int]")  [assignment]
app/services/gw2_api.py:273: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
app/services/gw2_api.py:273: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
app/services/gw2_api.py:278: error: Statement is unreachable  [unreachable]
app/services/gw2_api.py:302: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/services/gw2_api.py:333: error: "GW2Profession" has no attribute "description"  [attr-defined]
app/services/gw2_api.py:348: error: Argument "obj_in" to "create" of "CRUDProfession" has incompatible type "dict[str, dict[str, Any] | bool | Any | str | None]"; expected "ProfessionCreate"  [arg-type]
app/services/gw2_api.py:360: error: Incompatible return value type (got "list[Profession]", expected "list[GW2Profession]")  [return-value]
app/worker.py:19: error: Function is missing a return type annotation  [no-untyped-def]
app/worker.py:19: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/worker.py:28: error: Module "app.crud" has no attribute "webhook"  [attr-defined]
app/worker.py:71: error: "close" of "Session" does not return a value (it only ever returns None)  [func-returns-value]
app/worker.py:74: error: Function is missing a return type annotation  [no-untyped-def]
app/worker.py:84: error: Name "crud_webhook" is not defined  [name-defined]
app/worker.py:86: error: Item "None" of "ArqRedis | None" has no attribute "enqueue_job"  [union-attr]
app/worker.py:88: error: "close" of "Session" does not return a value (it only ever returns None)  [func-returns-value]
app/worker.py:91: error: Function is missing a return type annotation  [no-untyped-def]
app/worker.py:96: error: "Settings" has no attribute "REDIS_HOST"  [attr-defined]
app/worker.py:96: error: "Settings" has no attribute "REDIS_PORT"  [attr-defined]
app/worker.py:100: error: "Settings" has no attribute "redis_url"  [attr-defined]
app/worker.py:106: error: "Settings" has no attribute "REDIS_HOST"  [attr-defined]
app/worker.py:107: error: "Settings" has no attribute "REDIS_PORT"  [attr-defined]
app/worker.py:108: error: "Settings" has no attribute "REDIS_DB"  [attr-defined]
app/worker.py:109: error: "Settings" has no attribute "REDIS_PASSWORD"  [attr-defined]
app/worker.py:119: error: Call to untyped function "get_redis_settings" in typed context  [no-untyped-call]
app/worker.py:129: error: Function is missing a type annotation  [no-untyped-def]
app/worker.py:131: error: Argument 1 to "create_pool" has incompatible type "type[WorkerSettings]"; expected "RedisSettings | None"  [arg-type]
app/worker.py:134: error: Function is missing a type annotation  [no-untyped-def]
app/api/deps.py:62: error: Module has no attribute "UserCreate"  [attr-defined]
app/api/deps.py:71: error: Item "None" of "User | None" has no attribute "id"  [union-attr]
app/api/deps.py:72: error: Item "None" of "User | None" has no attribute "email"  [union-attr]
app/api/deps.py:73: error: Item "None" of "User | None" has no attribute "username"  [union-attr]
app/api/deps.py:74: error: Item "None" of "User | None" has no attribute "is_active"  [union-attr]
app/api/deps.py:75: error: Item "None" of "User | None" has no attribute "is_superuser"  [union-attr]
app/api/deps.py:78: error: Incompatible return value type (got "User | None", expected "User")  [return-value]
app/api/deps.py:91: error: Name "user_id" already defined on line 71  [no-redef]
app/api/deps.py:223: error: Incompatible types in assignment (expression has type "Select[tuple[TeamMember]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/deps.py:295: error: Returning Any from function declared to return "GW2Client"  [no-any-return]
app/api/api_v1/endpoints/users.py:25: error: Module has no attribute "get_multi_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:39: error: Module has no attribute "get_by_email_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:45: error: Module has no attribute "create_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:59: error: Module has no attribute "update_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:96: error: Module has no attribute "get_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:117: error: Module has no attribute "get_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:123: error: Module has no attribute "update_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:139: error: Module has no attribute "get_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:144: error: Module has no attribute "get_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:153: error: Module has no attribute "add_role_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:169: error: Module has no attribute "get_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:174: error: Module has no attribute "get_async"  [attr-defined]
app/api/api_v1/endpoints/users.py:183: error: Module has no attribute "remove_role_async"  [attr-defined]
app/api/api_v1/endpoints/teams.py:231: error: Incompatible types in assignment (expression has type "Select[tuple[User]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/teams.py:232: error: Module has no attribute "team_members"  [attr-defined]
app/api/api_v1/endpoints/teams.py:233: error: Module has no attribute "team_members"  [attr-defined]
app/api/api_v1/endpoints/team_members.py:52: error: Incompatible types in assignment (expression has type "Select[tuple[TeamMember]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/team_members.py:68: error: Incompatible types in assignment (expression has type "Select[tuple[User]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/team_members.py:79: error: Incompatible types in assignment (expression has type "Select[tuple[TeamMember]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/team_members.py:101: error: "Team" has no attribute "email"  [attr-defined]
app/api/api_v1/endpoints/team_members.py:130: error: Incompatible types in assignment (expression has type "Select[tuple[TeamMember]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/team_members.py:146: error: Incompatible types in assignment (expression has type "Select[tuple[TeamMember]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/team_members.py:199: error: Incompatible types in assignment (expression has type "Select[tuple[TeamMember]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/team_members.py:215: error: Incompatible types in assignment (expression has type "Select[tuple[TeamMember]]", variable has type "Select[tuple[Team]]")  [assignment]
app/api/api_v1/endpoints/team_members.py:232: error: "Team" has no attribute "is_active"  [attr-defined]
app/api/api_v1/endpoints/team_members.py:233: error: "Team" has no attribute "left_at"  [attr-defined]
app/api/api_v1/endpoints/tags.py:52: error: Missing named argument "created_at" for "TagStats"  [call-arg]
app/api/api_v1/endpoints/tags.py:52: error: Missing named argument "updated_at" for "TagStats"  [call-arg]
app/api/api_v1/endpoints/tags.py:192: error: Incompatible types in assignment (expression has type "Select[tuple[CompositionTag]]", variable has type "Select[tuple[Tag]]")  [assignment]
app/api/api_v1/endpoints/roles.py:22: error: Module has no attribute "get_multi"  [attr-defined]
app/api/api_v1/endpoints/roles.py:36: error: Module has no attribute "get_by_name"  [attr-defined]
app/api/api_v1/endpoints/roles.py:42: error: Module has no attribute "create"  [attr-defined]
app/api/api_v1/endpoints/roles.py:57: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/roles.py:62: error: Module has no attribute "update"  [attr-defined]
app/api/api_v1/endpoints/roles.py:74: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/roles.py:93: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/roles.py:98: error: Module has no attribute "remove"  [attr-defined]
app/api/api_v1/endpoints/professions.py:23: error: Module has no attribute "get_multi"  [attr-defined]
app/api/api_v1/endpoints/professions.py:37: error: Module has no attribute "get_by_name"  [attr-defined]
app/api/api_v1/endpoints/professions.py:43: error: Module has no attribute "create"  [attr-defined]
app/api/api_v1/endpoints/professions.py:55: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:74: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:79: error: Module has no attribute "update"  [attr-defined]
app/api/api_v1/endpoints/professions.py:95: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:100: error: Module has no attribute "remove"  [attr-defined]
app/api/api_v1/endpoints/professions.py:128: error: Module has no attribute "get_multi"  [attr-defined]
app/api/api_v1/endpoints/professions.py:160: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:167: error: Module has no attribute "get_by_name_and_profession_async"  [attr-defined]
app/api/api_v1/endpoints/professions.py:180: error: Module has no attribute "create"  [attr-defined]
app/api/api_v1/endpoints/professions.py:197: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:219: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:225: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:234: error: Module has no attribute "get_by_name_and_profession_async"  [attr-defined]
app/api/api_v1/endpoints/professions.py:247: error: Module has no attribute "update"  [attr-defined]
app/api/api_v1/endpoints/professions.py:269: error: Module has no attribute "get"  [attr-defined]
app/api/api_v1/endpoints/professions.py:275: error: Module has no attribute "update"  [attr-defined]
app/api/api_v1/endpoints/gw2.py:23: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/gw2.py:45: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/gw2.py:67: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/gw2.py:99: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/gw2.py:122: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/gw2.py:135: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/compositions.py:18: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:19: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:20: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:21: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:22: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:23: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:84: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/compositions.py:135: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:136: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:149: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:170: error: Call to untyped function "Composition" in typed context  [no-untyped-call]
app/api/api_v1/endpoints/compositions.py:177: error: Argument 3 to "_upsert_members" has incompatible type "list[CompositionMemberBase]"; expected "list[CompositionMemberBase | dict[Any, Any]] | None"  [arg-type]
app/api/api_v1/endpoints/compositions.py:177: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
app/api/api_v1/endpoints/compositions.py:177: note: Consider using "Sequence" instead, which is covariant
app/api/api_v1/endpoints/compositions.py:266: error: Argument 3 to "_upsert_members" has incompatible type "list[CompositionMemberBase]"; expected "list[CompositionMemberBase | dict[Any, Any]] | None"  [arg-type]
app/api/api_v1/endpoints/compositions.py:266: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
app/api/api_v1/endpoints/compositions.py:266: note: Consider using "Sequence" instead, which is covariant
app/api/api_v1/endpoints/compositions.py:294: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/compositions.py:295: error: Module has no attribute "models"  [attr-defined]
app/api/api_v1/endpoints/builds.py:111: error: Argument "examples" to "Body" has incompatible type "dict[str, dict[str, dict[str, object]]]"; expected "list[Any] | None"  [arg-type]
app/api/api_v1/endpoints/builds.py:134: error: "CRUDBuild" has no attribute "create_with_owner_async"  [attr-defined]
app/api/api_v1/endpoints/builds.py:165: error: Argument "examples" to "Body" has incompatible type "dict[str, dict[str, dict[str, object]]]"; expected "list[Any] | None"  [arg-type]
app/api/api_v1/endpoints/builds.py:196: error: "AsyncSession" has no attribute "query"  [attr-defined]
app/api/api_v1/endpoints/builds.py:199: error: "AsyncSession" has no attribute "query"  [attr-defined]
app/api/api_v1/endpoints/builds.py:202: error: "AsyncSession" has no attribute "query"  [attr-defined]
app/api/api_v1/endpoints/builds.py:202: error: Module has no attribute "BuildProfession"; maybe "build_profession" or "Profession"?  [attr-defined]
app/api/api_v1/endpoints/builds.py:211: error: "CRUDBuild" has no attribute "get_by_name_async"  [attr-defined]
app/api/api_v1/endpoints/builds.py:222: error: "CRUDBuild" has no attribute "create_with_owner"  [attr-defined]
app/api/api_v1/endpoints/builds.py:291: error: Statement is unreachable  [unreachable]
app/api/api_v1/endpoints/builds.py:325: error: Statement is unreachable  [unreachable]
app/api/api_v1/endpoints/builds.py:325: error: Name "db_build" is used before definition  [used-before-def]
app/api/api_v1/endpoints/builds.py:356: error: Statement is unreachable  [unreachable]
app/api/api_v1/endpoints/builds.py:468: error: Argument "examples" to "Body" has incompatible type "dict[str, dict[str, dict[str, object]]]"; expected "list[Any] | None"  [arg-type]
app/api/api_v1/endpoints/builds.py:568: error: "CRUDBuild" has no attribute "get_multi_by_owner_async"; maybe "get_multi_by_owner"?  [attr-defined]
app/api/api_v1/endpoints/builds.py:575: error: "CRUDBuild" has no attribute "get_public_builds_async"  [attr-defined]
app/api/api_v1/endpoints/builder.py:147: error: "CompositionOptimizationRequest" has no attribute "fixed_roles"  [attr-defined]
app/api/api_v1/endpoints/builder.py:148: error: "CompositionOptimizationRequest" has no attribute "fixed_roles"  [attr-defined]
app/api/api_v1/endpoints/auth.py:23: error: Incompatible types in assignment (expression has type "None", variable has type "Callable[..., Any]")  [assignment]
app/api/api_v1/endpoints/auth.py:25: error: Function "rate_limiter" could always be true in boolean context  [truthy-function]
app/api/api_v1/endpoints/auth.py:239: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/auth.py:245: error: Function is missing a return type annotation  [no-untyped-def]
app/api/api_v1/endpoints/auth.py:389: error: Name "register" already defined on line 97  [no-redef]
app/main.py:60: error: Call to untyped function "schedule_key_rotation" in typed context  [no-untyped-call]
app/main.py:140: error: Function is missing a return type annotation  [no-untyped-def]
app/main.py:140: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
app/__init__.py:69: error: Incompatible import of "get_current_active_user" (imported name has type "Callable[[User], Coroutine[Any, Any, User]]", local name has type "Callable[[dict[str, Any]], dict[str, Any]]")  [assignment]
app/__init__.py:69: error: Incompatible import of "get_current_active_superuser" (imported name has type "Callable[[User], Coroutine[Any, Any, User]]", local name has type "Callable[[dict[str, Any]], dict[str, Any]]")  [assignment]
app/crud/build.py:49: error: Name "selectinload" is not defined  [name-defined]
app/crud/build.py:50: error: Name "selectinload" is not defined  [name-defined]
app/crud/build.py:78: error: Name "selectinload" is not defined  [name-defined]
app/crud/build.py:79: error: Name "selectinload" is not defined  [name-defined]
app/crud/build.py:217: error: Incompatible return value type (got "BuildGenerationResponse", expected "Build | None")  [return-value]
app/crud/build.py:227: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:228: error: Name "professions" is not defined  [name-defined]
app/crud/build.py:232: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:233: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:239: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:240: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:241: error: Argument "game_mode" to "BuildCreate" has incompatible type "str"; expected "GameMode"  [arg-type]
app/crud/build.py:242: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:249: error: Argument 1 to "create_with_owner" of "CRUDBuild" has incompatible type "AsyncSession"; expected "Session"  [arg-type]
app/crud/build.py:253: error: Item "None" of "Build | None" has no attribute "id"  [union-attr]
app/crud/build.py:254: error: Item "None" of "Build | None" has no attribute "name"  [union-attr]
app/crud/build.py:255: error: Item "None" of "Build | None" has no attribute "description"  [union-attr]
app/crud/build.py:256: error: Item "None" of "Build | None" has no attribute "game_mode"  [union-attr]
app/crud/build.py:257: error: Item "None" of "Build | None" has no attribute "team_size"  [union-attr]
app/crud/build.py:258: error: Item "None" of "Build | None" has no attribute "is_public"  [union-attr]
app/crud/build.py:260: error: Item "None" of "Build | None" has no attribute "created_by_id"  [union-attr]
app/crud/build.py:261: error: Item "None" of "Build | None" has no attribute "created_at"  [union-attr]
app/crud/build.py:262: error: Item "None" of "Build | None" has no attribute "updated_at"  [union-attr]
app/crud/build.py:262: error: Item "None" of "datetime | Any | None" has no attribute "isoformat"  [union-attr]
app/crud/build.py:268: error: Item "None" of "Build | None" has no attribute "config"  [union-attr]
app/crud/build.py:269: error: Item "None" of "Build | None" has no attribute "constraints"  [union-attr]
app/crud/build.py:277: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:279: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:305: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:306: error: Name "generation_request" is not defined  [name-defined]
app/crud/build.py:313: error: Incompatible return value type (got "BuildGenerationResponse", expected "Build | None")  [return-value]
app/crud/build.py:316: error: Argument "build" to "BuildGenerationResponse" has incompatible type "dict[str, list[dict[str, Any]] | list[Any] | int | Any | str | dict[str, Any] | dict[str | Any, Any] | None]"; expected "Build | None"  [arg-type]
app/crud/build.py:317: error: Argument "suggested_composition" to "BuildGenerationResponse" has incompatible type "list[dict[str, Any]]"; expected "list[TeamMember]"  [arg-type]
app/crud/build.py:321: error: Incompatible return value type (got "BuildGenerationResponse", expected "Build | None")  [return-value]
app/crud/build.py:470: error: Incompatible types in assignment (expression has type "Insert", variable has type "Select[tuple[int]]")  [assignment]
app/crud/build.py:570: error: Incompatible types in assignment (expression has type "str", target has type "RoleType")  [assignment]
app/crud/build.py:580: error: Argument 2 to "get" of "dict" has incompatible type "str"; expected "RoleType"  [arg-type]
app/crud/build.py:613: error: Generator has incompatible item type "int"; expected "bool"  [misc]
app/crud/build.py:615: error: "object" has no attribute "lower"  [attr-defined]
app/crud/build.py:617: error: Generator has incompatible item type "int"; expected "bool"  [misc]
app/crud/build.py:617: error: "object" has no attribute "lower"  [attr-defined]
app/crud/build.py:619: error: Generator has incompatible item type "int"; expected "bool"  [misc]
app/crud/build.py:619: error: "object" has no attribute "lower"  [attr-defined]
app/api/v1/endpoints/webhooks.py:18: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/webhooks.py:39: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/webhooks.py:60: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/webhooks.py:85: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/webhooks.py:105: error: Unexpected keyword argument "user_id" for "update_webhook" of "WebhookService"  [call-arg]
app/services/webhook_service.py:206: note: "update_webhook" of "WebhookService" defined here
app/api/v1/endpoints/webhooks.py:123: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/webhooks.py:142: error: Unexpected keyword argument "user_id" for "delete_webhook" of "WebhookService"  [call-arg]
app/services/webhook_service.py:235: note: "delete_webhook" of "WebhookService" defined here
app/api/v1/endpoints/elite_specializations.py:19: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/elite_specializations.py:26: error: Incompatible types in "await" (actual type "list[EliteSpecialization]", expected type "Awaitable[Any]")  [misc]
app/api/v1/endpoints/elite_specializations.py:26: error: Argument 1 to "get_multi" of "CRUDBase" has incompatible type "AsyncSession"; expected "Session"  [arg-type]
app/api/v1/endpoints/elite_specializations.py:32: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/elite_specializations.py:42: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/elite_specializations.py:55: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/elite_specializations.py:71: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/elite_specializations.py:87: error: Function is missing a return type annotation  [no-untyped-def]
app/api/v1/endpoints/elite_specializations.py:99: error: Function is missing a return type annotation  [no-untyped-def]
Found 670 errors in 89 files (checked 126 source files)
