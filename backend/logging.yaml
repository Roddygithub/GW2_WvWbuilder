version: 1
disable_existing_loggers: False

formatters:
  default:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(module)s:%(funcName)s:%(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(name)s %(levelname)s %(module)s %(funcName)s %(lineno)d %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: default
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: /var/log/gw2_wvw_builder/app.log
    maxBytes: 10485760  # 10MB
    backupCount: 7
    encoding: utf8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: /var/log/gw2_wvw_builder/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 7
    encoding: utf8
  
  access_file:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: default
    filename: /var/log/gw2_wvw_builder/access.log
    when: 'midnight'
    interval: 1
    backupCount: 30
    encoding: utf8

loggers:
  uvicorn:
    level: INFO
    handlers: [console, file]
    propagate: no
  
  uvicorn.access:
    level: INFO
    handlers: [access_file]
    propagate: no
  
  uvicorn.error:
    level: ERROR
    handlers: [error_file]
    propagate: no
  
  fastapi:
    level: INFO
    handlers: [console, file]
    propagate: no
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [file]
    propagate: no
  
  app:
    level: INFO
    handlers: [console, file, error_file]
    propagate: no

root:
  level: INFO
  handlers: [console, file, error_file]
