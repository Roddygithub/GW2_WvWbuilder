"""add_missing_fields_to_elite_specializations

Revision ID: 123456789abc
Revises: df27d93012b6
Create Date: 2025-09-21 18:35:00.000000+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "123456789abc"
down_revision: Union[str, None] = "df27d93012b6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('elite_specializations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('weapon_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('background_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True, server_default=sa.text('1')))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    
    # Set default values for existing records
    op.execute("""
        UPDATE elite_specializations 
        SET 
            weapon_type = 'Greatsword',
            is_active = 1,
            created_at = CURRENT_TIMESTAMP
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('elite_specializations', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_active')
        batch_op.drop_column('background_url')
        batch_op.drop_column('weapon_type')
    # ### end Alembic commands ###
