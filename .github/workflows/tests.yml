name: Tests & Quality Checks

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        cd backend
        poetry install --no-interaction --no-root || true
      continue-on-error: true
    
    - name: Install project
      run: |
        cd backend
        poetry install --no-interaction || true
      continue-on-error: true
    
    - name: Run tests with coverage
      run: |
        cd backend
        poetry run pytest tests/ --cov=app --cov-report=xml --cov-report=term-missing --tb=short
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.1
    
    - name: Install dependencies
      run: |
        cd backend
        poetry install --no-interaction || true
      continue-on-error: true
    
    - name: Check formatting with Black
      run: |
        cd backend
        poetry run black --check app/ --line-length 120
      continue-on-error: true
    
    - name: Lint with Ruff (app only)
      run: |
        cd backend
        poetry run ruff check app/
      continue-on-error: true
    
    - name: Security check with Bandit
      run: |
        cd backend
        poetry run bandit -r app -ll
      continue-on-error: true

  type-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.1
    
    - name: Install dependencies
      run: |
        cd backend
        poetry install --no-interaction
    
    - name: Type check with mypy
      run: |
        cd backend
        poetry run mypy app/ --ignore-missing-imports
      continue-on-error: true
