name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - '**'
    paths:
      - 'Dockerfile'
      - 'docker-compose*.yml'
      - '**/Dockerfile'
      - '.github/workflows/docker-build-push.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_IMAGE: gw2-wvwbuilder

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for GHCR
        id: ghcr_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}-{{sha}},suffix=-nightly,enable=${{ github.event_name == 'schedule' }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long,prefix=sha-

      - name: Build and push backend to GHCR
        id: build_backend_ghcr
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.ghcr_meta.outputs.tags }}
          labels: ${{ steps.ghcr_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.ghcr_meta.outputs.tags }}-frontend
          labels: ${{ steps.ghcr_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Docker Hub - Only run if secrets are available
      - name: Check for Docker Hub credentials
        id: check_dockerhub
        if: github.event_name != 'pull_request'
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ] || [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "Docker Hub credentials not found, skipping Docker Hub push"
            echo "dockerhub_available=false" >> $GITHUB_OUTPUT
          else
            echo "Docker Hub credentials found, proceeding with push"
            echo "dockerhub_available=true" >> $GITHUB_OUTPUT
          fi

      - name: Set metadata for Docker Hub
        if: github.event_name != 'pull_request' && steps.check_dockerhub.outputs.dockerhub_available == 'true'
        id: dockerhub_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE }}
          tags: |
            type=raw,value=latest
            type=ref,event=tag
            type=sha,format=long

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' && steps.check_dockerhub.outputs.dockerhub_available == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend to Docker Hub
        if: github.event_name != 'pull_request' && steps.check_dockerhub.outputs.dockerhub_available == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ${{ steps.dockerhub_meta.outputs.tags }}
          labels: ${{ steps.dockerhub_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend to Docker Hub
        if: github.event_name != 'pull_request' && steps.check_dockerhub.outputs.dockerhub_available == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.dockerhub_meta.outputs.tags }}-frontend
          labels: ${{ steps.dockerhub_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image digests
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "=== GHCR Images ==="
          echo "Backend image digest: ${{ steps.build_backend_ghcr.outputs.digest }}"
          echo "Frontend image: ${{ steps.ghcr_meta.outputs.tags }}-frontend"
          
          if ${{ steps.check_dockerhub.outputs.dockerhub_available == 'true' }}; then
            echo "\n=== Docker Hub Images ==="
            echo "Backend image: ${{ steps.dockerhub_meta.outputs.tags }}"
            echo "Frontend image: ${{ steps.dockerhub_meta.outputs.tags }}-frontend"
          else
            echo "\nSkipped Docker Hub push - credentials not configured"
          fi
